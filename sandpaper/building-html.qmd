---
title: "Building HTML"
---

## Introduction

Building HTML in The Workbench is a process that is isolated from rendering
R Markdown to Markdown. There are three general steps to building the HTML
files:

1. **render** the HTML using `pandoc` with our custom lua filters (which transform
   our special fenced-divs and flattens relative links)
2. **post-process** the HTML using {xml2} to further refine and translate
   elements that we cannot achieve through Lua filters
3. **apply {varnish} templates** by passing [global
   variables](https://carpentries.github.io/sandpaper/dev/articles/data-flow.html)
   and HTML to {pkgdown}.


## Rendering HTML

The diagram for rendering html

```{r}
#| label: render-html
#| echo: false
#| eval: !expr Sys.getenv("CI", "false") != "true"
#| message: false
#| cache: true
toc <- Sys.time()
tmp <- "tmp.html"
flow::flow_view_uses(sandpaper:::render_html, out = tmp)
res <- webshot2::webshot(tmp, "render-html.png", zoom = 2)
unlink(tmp)
tic <- Sys.time()
cat(paste("time elapsed:", format(tic - toc)))
```

![](render-html.png)

## Post-processing with XML

All `fix_nodes()` calls occur before `build_html()`

```{r}
#| label: fix-nodes-uses
#| echo: false
#| eval: !expr Sys.getenv("CI", "false") != "true"
#| message: false
#| cache: true
toc <- Sys.time()
tmp <- "tmp.html"
flow::flow_view_uses(sandpaper:::fix_nodes, out = tmp)
res <- webshot2::webshot(tmp, "fix-nodes-uses.png", zoom = 2)
unlink(tmp)
tic <- Sys.time()
cat(paste("time elapsed:", format(tic - toc)))
```

![](fix-nodes-uses.png)

`fix_nodes()` will call XML manipulating functions.


```{r}
#| label: fix-nodes-deps
#| echo: false
#| eval: !expr Sys.getenv("CI", "false") != "true"
#| message: false
#| cache: true
toc <- Sys.time()
tmp <- "tmp.html"
flow::flow_view_deps(sandpaper:::fix_nodes, out = tmp, show_imports = "none")
res <- webshot2::webshot(tmp, "fix-nodes-deps.png", zoom = 2)
tic <- Sys.time()
unlink(tmp)
cat(paste("time elapsed:", format(tic - toc)))
```

![](fix-nodes-deps.png)

## Applying {varnish} templating

All HTML files get funneled into `pkgdown::render_page()` through `build_html()`


```{r}
#| label: render-page
#| echo: false
#| eval: !expr Sys.getenv("CI", "false") != "true"
#| cache: true
toc <- Sys.time()
tmp <- "tmp.html"
flow::flow_view_uses(pkgdown::render_page, "sandpaper", out = tmp)
res <- webshot2::webshot(tmp, "render-page.png", zoom = 2)
unlink(tmp)
tic <- Sys.time()
cat(paste("time elapsed:", format(tic - toc)))
```

![](render-page.png)
